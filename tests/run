#!/bin/bash

runner=$1
extra=$2
fail=0
if [[ "$runner" != "" ]];
then
    echo "Using runner = $runner with extra arguments = $extra"
fi

LOG=$(mktemp)
fail_list=""
test_path=${BASH_SOURCE%/*}

for f in \
    ${test_path}/core/core.py \
    ${test_path}/core/tensors.py \
    ${test_path}/core/gamma.py \
    ${test_path}/core/block.py \
    ${test_path}/core/scalar.py \
    ${test_path}/core/checksums.py \
    ${test_path}/core/importexport.py \
    ${test_path}/core/orthogonalize.py \
    ${test_path}/core/matrix.py \
    ${test_path}/core/split.py \
    ${test_path}/core/other_reps.py \
    ${test_path}/random/random-simple.py \
    ${test_path}/qcd/a2a.py \
    ${test_path}/qcd/fermion-operators.py \
    ${test_path}/qcd/sap.py \
    ${test_path}/algorithms/implicitly-restarted-lanczos.py \
    ${test_path}/algorithms/arnoldi.py \
    ${test_path}/algorithms/solvers.py
do

printf "%-60s" " [TEST] $f"

start=$SECONDS
${runner} $f ${extra} 2>&1 > ${LOG}
res=$?
elapsed=$((SECONDS-start))

if [[ "$res" == "0" ]];
then
    echo "OK  ($elapsed s)"
else
    echo "ERR ($elapsed s)"
    cat ${LOG}
    fail=$((fail+1))
    fail_list="$fail_list $f"
fi

done

if [ -f ${LOG} ];
then
    rm -f ${LOG}
fi

if ((fail != 0))
then
    echo "$fail tests failed:"
    for f in ${fail_list}
    do
	echo $f
    done
    exit 1
else
    echo "All tests successful"
fi
